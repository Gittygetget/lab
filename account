class Account:
    """
    A class representing details for an account object
    """

    def __init__(self, name: str, balance=0.0) -> None:
        """
        Function to set the name of the account as well as set the balance to 0
        :type name: Object
        :param name: Account owner's first name
        """
        self.__account_name: str = name     # Name retrieved from the parameter: name from the init function
        self.__account_balance: float = balance     # Account balance set to 0 as base value

    def deposit(self, amount: float) -> float:
        """
        Method to deposit money into the account
        :type amount: The amount to be deposited
        :return Returns the boolean value
        """
        # TODO: Need to account for invalid input and 0 entered for amount - exception handling
        if amount <= 0:
            return False
        if amount > 0:
            self.__account_balance += amount    # Readjusts the value of account_balance if function is valid
            return True

    def withdraw(self, amount: float) -> bool:
        """
        Method to withdraw money from the account
        :param amount: Amount to be withdrawn
        :return: Returns the boolean value
        """
        # TODO: Need to account for invalid input and 0 entered for amount - exception handling
        if 0 <= amount < self.__account_balance:
            self.__account_balance -= amount  # Readjusts the value of account_balance if function is valid
            return True
        elif self.__account_balance < amount or amount < 0:
            return False

    def get_balance(self) -> float:
        """
        Method to get the balance of the account
        :return: Returns the balance of the account
        """
        return self.__account_balance

    def get_name(self) -> str:
        """
        Method to get the name of the account
        :return: Returns the name of the account holder
        """
        return self.__account_name
